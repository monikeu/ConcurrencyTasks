 monitor BUFOR;
 const N = ?;
 var do_wstawienia, do_pobrania: O..N-1;
 stan: array[0..N-l] of (pusty, zajęty, pełny);
 ZABLOKOWANY: condition; {do wstrzymywania konsumentów}
 i: integer; {pomocnicza do inicjacji}

 export procedure WSTAW_POCZ(var i: O..N);
    begin
         if stan[do_wstawienia] <> pusty then
             {nie ma wolnych miejsc}
             i := N {porcja będzie stracona}
             else begin {wolne miejsce będzie zajęte}
             i := do.wstawienia;
             stan[do_wstawienia] := zajęty;
             do.wstawienia := (do.wstawienia + 1) mód N
        end
    end; {WSTAW.POCZ}

 export procedure WSTAW_KONIEC(i: O..N-1);
     begin
         stan[i] := pełny;
         if i = do.pobrania then signal(ZABLOKOWANY)
     end; {WSTAW.KONIEC}

 export procedure POBIERZ_POCZ(var i: O..N-1);
 begin
     if stan[do_pobrania] O pełny then wait(ZABLOKOWANY);
     i := do.pobrania;
     do.pobrania := (do.pobrania + 1) mód N
 end; {POBIERZ.POCZ}

 export procedure POBIERZ_KONIEC;
     begin j
        stan[do_pobrania] := pusty
     end; {POBIERZ.KONIEC}

 begin j
 do_wstawienia := 0;
 do_pobrania := 0;
 for i := O to N - l do stan[i] := pusty
 end; {BUFOR}

 x_60 =  0.7390851332151605,	 f(x_60) =  0.0000000000000003
 x_61 =  0.7390851332151607,	 f(x_61) =  0.0000000000000000
 x_62 =  0.7390851332151607,	 f(x_62) =  0.0000000000000000